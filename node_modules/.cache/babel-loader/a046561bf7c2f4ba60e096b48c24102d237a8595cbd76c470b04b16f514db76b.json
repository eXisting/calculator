{"ast":null,"code":"/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObjectObject(o) {\n  return isObject(o) === true && Object.prototype.toString.call(o) === '[object Object]';\n}\nfunction isPlainObject(o) {\n  var ctor, prot;\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\nexport default isPlainObject;","map":{"version":3,"names":["isObject","val","Array","isArray","isObjectObject","o","Object","prototype","toString","call","isPlainObject","ctor","prot","constructor","hasOwnProperty"],"sources":["/Users/andreypopazov/Work/Web/SavingsCalculator/annual-savings-calculator/node_modules/is-plain-object/index.es.js"],"sourcesContent":["/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n}\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexport default isPlainObject;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,QAAQA,CAACC,GAAG,EAAE;EACrB,OAAOA,GAAG,IAAI,IAAI,IAAI,OAAOA,GAAG,KAAK,QAAQ,IAAIC,KAAK,CAACC,OAAO,CAACF,GAAG,CAAC,KAAK,KAAK;AAC/E;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASG,cAAcA,CAACC,CAAC,EAAE;EACzB,OAAOL,QAAQ,CAACK,CAAC,CAAC,KAAK,IAAI,IACtBC,MAAM,CAACC,SAAS,CAACC,QAAQ,CAACC,IAAI,CAACJ,CAAC,CAAC,KAAK,iBAAiB;AAC9D;AAEA,SAASK,aAAaA,CAACL,CAAC,EAAE;EACxB,IAAIM,IAAI,EAACC,IAAI;EAEb,IAAIR,cAAc,CAACC,CAAC,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK;;EAE7C;EACAM,IAAI,GAAGN,CAAC,CAACQ,WAAW;EACpB,IAAI,OAAOF,IAAI,KAAK,UAAU,EAAE,OAAO,KAAK;;EAE5C;EACAC,IAAI,GAAGD,IAAI,CAACJ,SAAS;EACrB,IAAIH,cAAc,CAACQ,IAAI,CAAC,KAAK,KAAK,EAAE,OAAO,KAAK;;EAEhD;EACA,IAAIA,IAAI,CAACE,cAAc,CAAC,eAAe,CAAC,KAAK,KAAK,EAAE;IAClD,OAAO,KAAK;EACd;;EAEA;EACA,OAAO,IAAI;AACb;AAEA,eAAeJ,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}