{"ast":null,"code":"var _jsxFileName = \"/Users/andreypopazov/Work/Web/SavingsCalculator/annual-savings-calculator/src/SliderWithSnaps.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SliderWithSnaps = _ref => {\n  _s();\n  let {\n    callback,\n    min,\n    max,\n    interval\n  } = _ref;\n  const [value, setValue] = useState(min);\n  const handleSliderChange = newValue => {\n    setValue(newValue);\n  };\n  const handleSliderSnap = newValue => {\n    const snappedValue = Math.round(newValue / interval) * interval;\n    setValue(snappedValue);\n    callback(snappedValue);\n  };\n  const marks = {};\n  for (let i = min; i <= max; i += interval) {\n    marks[i] = i;\n  }\n  const selectedMarkStyle = {\n    fontWeight: 'bold',\n    height: '16px',\n    color: '#007BFF'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      margin: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(Slider, {\n      min: min,\n      max: max,\n      step: interval,\n      value: value,\n      onChange: handleSliderChange,\n      onAfterChange: handleSliderSnap,\n      marks: marks,\n      railStyle: {\n        backgroundColor: '#ccc'\n      },\n      trackStyle: {\n        backgroundColor: '#007BFF'\n      },\n      handleStyle: {\n        borderColor: '#007BFF'\n      },\n      dotStyle: {\n        display: 'none'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginTop: '10px'\n      },\n      children: Object.keys(marks).map(mark => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            width: '2px',\n            height: '14px',\n            backgroundColor: '#007BFF',\n            margin: '0 auto'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            textAlign: 'center',\n            fontSize: '12px',\n            marginTop: '5px',\n            ...marks[mark].style,\n            ...(value === parseInt(mark) ? selectedMarkStyle : {})\n          },\n          children: mark\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, mark, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(SliderWithSnaps, \"n3J/rG+3nvhmGwYHhSzJ2XbzYzU=\");\n_c = SliderWithSnaps;\nexport default SliderWithSnaps;\nvar _c;\n$RefreshReg$(_c, \"SliderWithSnaps\");","map":{"version":3,"names":["React","useState","Slider","jsxDEV","_jsxDEV","SliderWithSnaps","_ref","_s","callback","min","max","interval","value","setValue","handleSliderChange","newValue","handleSliderSnap","snappedValue","Math","round","marks","i","selectedMarkStyle","fontWeight","height","color","style","margin","children","step","onChange","onAfterChange","railStyle","backgroundColor","trackStyle","handleStyle","borderColor","dotStyle","display","fileName","_jsxFileName","lineNumber","columnNumber","justifyContent","marginTop","Object","keys","map","mark","width","textAlign","fontSize","parseInt","_c","$RefreshReg$"],"sources":["/Users/andreypopazov/Work/Web/SavingsCalculator/annual-savings-calculator/src/SliderWithSnaps.js"],"sourcesContent":["import React, { useState } from 'react';\nimport Slider from 'rc-slider';\nimport 'rc-slider/assets/index.css';\n\nconst SliderWithSnaps = ({ callback, min, max, interval }) => {\n  const [value, setValue] = useState(min);\n\n  const handleSliderChange = (newValue) => {\n    setValue(newValue);\n  };\n\n  const handleSliderSnap = (newValue) => {\n    const snappedValue = Math.round(newValue / interval) * interval;\n    setValue(snappedValue);\n\n    callback(snappedValue);\n  };\n\n  const marks = {};\n  for (let i = min; i <= max; i += interval) {\n    marks[i] = i;\n  }\n\n  const selectedMarkStyle = {\n    fontWeight: 'bold',\n    height: '16px',\n    color: '#007BFF',\n  };\n\n  return (\n    <div style={{ margin: '20px' }}>\n      <Slider\n        min={min}\n        max={max}\n        step={interval}\n        value={value}\n        onChange={handleSliderChange}\n        onAfterChange={handleSliderSnap}\n        marks={marks}\n        railStyle={{ backgroundColor: '#ccc' }}\n        trackStyle={{ backgroundColor: '#007BFF' }}\n        handleStyle={{ borderColor: '#007BFF' }}\n        dotStyle={{ display: 'none' }}\n      />\n      <div style={{ display: 'flex', justifyContent: 'space-between', marginTop: '10px' }}>\n        {Object.keys(marks).map((mark) => (\n          <div key={mark}>\n            <div style={{ width: '2px', height: '14px', backgroundColor: '#007BFF', margin: '0 auto' }} />\n            <div\n              style={{\n                textAlign: 'center',\n                fontSize: '12px',\n                marginTop: '5px',\n                ...marks[mark].style,\n                ...(value === parseInt(mark) ? selectedMarkStyle : {}),\n              }}\n            >\n              {mark}\n            </div>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default SliderWithSnaps;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}